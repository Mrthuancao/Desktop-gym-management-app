<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="fileSystemWatcher1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>33</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>